{
  "version": 3,
  "sources": ["../../@sentry/src/severity.ts", "../../tslib/tslib.es6.js", "../../@sentry/src/env.ts", "../../@sentry/src/node.ts", "../../@sentry/src/global.ts", "../../@sentry/src/is.ts", "../../@sentry/src/browser.ts", "../../@sentry/src/string.ts", "../../@sentry/src/object.ts", "../../@sentry/src/misc.ts", "../../@sentry/src/tracing.ts", "../../@sentry/src/async.ts", "../../@sentry/src/polyfill.ts", "../../@sentry/src/error.ts", "../../@sentry/src/flags.ts", "../../@sentry/src/dsn.ts", "../../@sentry/src/enums.ts", "../../@sentry/src/logger.ts", "../../@sentry/src/stacktrace.ts", "../../@sentry/src/supports.ts", "../../@sentry/src/instrument.ts", "../../@sentry/src/memo.ts", "../../@sentry/src/normalize.ts", "../../@sentry/src/syncpromise.ts", "../../@sentry/src/promisebuffer.ts", "../../@sentry/src/severity.ts", "../../@sentry/src/status.ts", "../../@sentry/src/time.ts", "../../@sentry/src/envelope.ts", "../../@sentry/src/clientreport.ts", "../../@sentry/src/ratelimit.ts", "../../@sentry/src/scope.ts", "../../@sentry/src/session.ts", "../../@sentry/src/flags.ts", "../../@sentry/src/hub.ts", "../../@sentry/src/sessionflusher.ts"],
  "sourcesContent": ["/**\n * TODO(v7): Remove this enum and replace with SeverityLevel\n */\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n\n// TODO: in v7, these can disappear, because they now also exist in `@sentry/utils`. (Having them there rather than here\n// is nice because then it enforces the idea that only types are exported from `@sentry/types`.)\nexport const SeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug', 'critical'] as const;\nexport type SeverityLevel = typeof SeverityLevels[number];\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n", "/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n", "/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { Integration } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined' // eslint-disable-line no-restricted-globals\n      ? window // eslint-disable-line no-restricted-globals\n      : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) as T & SentryGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof SentryGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const global = (obj || getGlobalObject()) as SentryGlobal;\n  const __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat: unknown, ty: string): boolean {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n", "import { getGlobalObject } from './global';\nimport { isString } from './is';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown, keyAttrs?: string[]): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    // eslint-disable-next-line no-plusplus\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  const global = getGlobalObject<Window>();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n", "import { isRegExp, isString } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nexport function escapeStringForRegex(regexString: string): string {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n", "/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: { [key: string]: unknown }, name: string, value: unknown): void {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nexport function convertToPlainObject(value: unknown): {\n  [key: string]: unknown;\n} {\n  let newObj = value as {\n    [key: string]: unknown;\n  };\n\n  if (isError(value)) {\n    newObj = {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value as ExtendedError),\n    };\n  } else if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    newObj = {\n      type: event.type,\n      target: serializeEventTarget(event.target),\n      currentTarget: serializeEventTarget(event.currentTarget),\n      ...getOwnProperties(event),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = event.detail;\n    }\n  }\n  return newObj;\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: { [key: string]: unknown }): { [key: string]: unknown } {\n  const extractedProps: { [key: string]: unknown } = {};\n  for (const property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      extractedProps[property] = obj[property];\n    }\n  }\n  return extractedProps;\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(val)) {\n      if (typeof val[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(val[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { getGlobalObject } from './global';\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n", "import { TraceparentData } from '@sentry/types';\n\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent: string): TraceparentData | undefined {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled: boolean | undefined;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n", "/**\n * Consumes the promise and logs the error when it rejects.\n * @param promise A promise to forget.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function forget(promise: PromiseLike<any>): void {\n  void promise.then(null, e => {\n    // TODO: Use a better logging mechanism\n    // eslint-disable-next-line no-console\n    console.error(e);\n  });\n}\n", "export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties);\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore __proto__ does not exist on obj\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!Object.prototype.hasOwnProperty.call(obj, prop)) {\n      // @ts-ignore typescript complains about indexing so we remove\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n", "import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n", "/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\ndeclare const __SENTRY_DEBUG__: boolean;\n\n/** Flag that is true for debug builds, false otherwise. */\nexport const IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n", "import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { SentryError } from './error';\nimport { IS_DEBUG_BUILD } from './flags';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\nfunction dsnFromString(str: string): DsnComponents {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  // TODO this is for backwards compatibility, and can be removed in a future version\n  if ('user' in components && !('publicKey' in components)) {\n    components.publicKey = components.user;\n  }\n\n  return {\n    user: components.publicKey || '',\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean | void {\n  if (!IS_DEBUG_BUILD) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport function makeDsn(from: DsnLike): DsnComponents {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n\n  validateDsn(components);\n\n  return components;\n}\n", "export const SeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug', 'critical'] as const;\nexport type SeverityLevel = typeof SeverityLevels[number];\n", "import { WrappedFunction } from '@sentry/types';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getGlobalObject, getGlobalSingleton } from './global';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<typeof CONSOLE_LEVELS[number], LoggerMethod>;\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  const global = getGlobalObject<Window>();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as Console & Record<string, unknown>;\n  const wrappedLevels: Partial<LoggerConsoleMethods> = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] as WrappedFunction).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] as LoggerConsoleMethods[typeof level];\n      originalConsole[level] = originalWrappedFunc as Console[typeof level];\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level as typeof CONSOLE_LEVELS[number]];\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if (IS_DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger: Logger;\nif (IS_DEBUG_BUILD) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { logger };\n", "import { StackFrame } from '@sentry/types';\n\nconst STACKTRACE_LIMIT = 50;\n\nexport type StackParser = (stack: string, skipFirst?: number) => StackFrame[];\nexport type StackLineParserFn = (line: string) => StackFrame | undefined;\nexport type StackLineParser = [number, StackLineParserFn];\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      for (const parser of sortedParsers) {\n        const frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: StackFrame[]): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n", "import { IS_DEBUG_BUILD } from './flags';\nimport { getGlobalObject } from './global';\nimport { logger } from './logger';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const global = getGlobalObject<Window>();\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = global.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      IS_DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (global as any).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n", "/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport { WrappedFunction } from '@sentry/types';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getGlobalObject } from './global';\nimport { isInstanceOf, isString } from './is';\nimport { CONSOLE_LEVELS, logger } from './logger';\nimport { fill } from './object';\nimport { getFunctionName } from './stacktrace';\nimport { supportsHistory, supportsNativeFetch } from './supports';\n\nconst global = getGlobalObject<Window>();\n\ntype InstrumentHandlerType =\n  | 'console'\n  | 'dom'\n  | 'fetch'\n  | 'history'\n  | 'sentry'\n  | 'xhr'\n  | 'error'\n  | 'unhandledrejection';\ntype InstrumentHandlerCallback = (data: any) => void;\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Instruments given API */\nfunction instrument(type: InstrumentHandlerType): void {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      IS_DEBUG_BUILD && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addInstrumentationHandler(type: InstrumentHandlerType, callback: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type: InstrumentHandlerType, data: any): void {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      IS_DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole(): void {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: string): void {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod: () => any): Function {\n      return function (...args: any[]): void {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(global, args).then(\n        (response: Response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error: Error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\ntype XHRSendInput = null | Blob | BufferSource | FormData | URLSearchParams | string;\n\n/** JSDoc */\ninterface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n    body?: XHRSendInput;\n  };\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs: any[] = []): string {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs: any[] = []): string {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR(): void {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      const xhrInfo: SentryWrappedXMLHttpRequest['__sentry_xhr__'] = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function (): void {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref: string;\n\n/** JSDoc */\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = global.onpopstate;\n  global.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID: number | undefined;\nlet lastCapturedEvent: Event | undefined;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous: Event | undefined, current: Event): boolean {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event: Event): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target as HTMLElement;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler: Function, globalListener: boolean = false): (event: Event) => void {\n  return (event: Event): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\n/** JSDoc */\nfunction instrumentDOM(): void {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (global as any)[target] && (global as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler: OnErrorEventHandler = null;\n/** JSDoc */\nfunction instrumentError(): void {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg: any, url: any, line: any, column: any, error: any): boolean {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e: any): boolean {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n", "/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n", "import { Primitive } from '@sentry/types';\n\nimport { isError, isEvent, isNaN, isSyntheticEvent } from './is';\nimport { memoBuilder, MemoFunc } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nexport function normalize(input: unknown, depth: number = +Infinity, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, there is no key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  const valueWithToJSON = value as unknown & { toJSON?: () => Primitive | ObjOrArray<unknown> };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (isError(value) || isEvent(value) ? convertToPlainObject(value) : value) as ObjOrArray<unknown>;\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n// TODO remove this in v7 (this means the method will no longer be exported, under any name)\nexport { visit as walk };\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) as Prototype).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n", "/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: \u00AF\\_(\u30C4)_/\u00AF\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n", "import { SentryError } from './error';\nimport { rejectedSyncPromise, resolvedSyncPromise, SyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          // eslint-disable-next-line no-plusplus\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n", "import { Severity } from '@sentry/types';\n\nimport { SeverityLevel, SeverityLevels } from './enums';\n\nfunction isSupportedSeverity(level: string): level is Severity {\n  return SeverityLevels.indexOf(level as SeverityLevel) !== -1;\n}\n/**\n * Converts a string-based level into a {@link Severity}.\n *\n * @param level string representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: SeverityLevel | string): Severity {\n  if (level === 'warn') return Severity.Warning;\n  if (isSupportedSeverity(level)) {\n    return level;\n  }\n  return Severity.Log;\n}\n", "import { EventStatus } from '@sentry/types';\n/**\n * Converts an HTTP status code to sentry status {@link EventStatus}.\n *\n * @param code number HTTP status code\n * @returns EventStatus\n */\nexport function eventStatusFromHttpCode(code: number): EventStatus {\n  if (code >= 200 && code < 300) {\n    return 'success';\n  }\n\n  if (code === 429) {\n    return 'rate_limit';\n  }\n\n  if (code >= 400 && code < 500) {\n    return 'invalid';\n  }\n\n  if (code >= 500) {\n    return 'failed';\n  }\n\n  return 'unknown';\n}\n", "import { getGlobalObject } from './global';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds: () => number = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds: () => number = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n", "import { Envelope } from '@sentry/types';\n\nimport { isPrimitive } from './is';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as E;\n}\n\n/**\n * Get the type of the envelope. Grabs the type from the first envelope item.\n */\nexport function getEnvelopeType<E extends Envelope>(envelope: E): string {\n  const [, [[firstItemHeader]]] = envelope;\n  return firstItemHeader.type;\n}\n\n/**\n * Serializes an envelope into a string.\n */\nexport function serializeEnvelope(envelope: Envelope): string {\n  const [headers, items] = envelope;\n  const serializedHeaders = JSON.stringify(headers);\n\n  // Have to cast items to any here since Envelope is a union type\n  // Fixed in Typescript 4.2\n  // TODO: Remove any[] cast when we upgrade to TS 4.2\n  // https://github.com/microsoft/TypeScript/issues/36390\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (items as any[]).reduce((acc, item: typeof items[number]) => {\n    const [itemHeaders, payload] = item;\n    // We do not serialize payloads that are primitives\n    const serializedPayload = isPrimitive(payload) ? String(payload) : JSON.stringify(payload);\n    return `${acc}\\n${JSON.stringify(itemHeaders)}\\n${serializedPayload}`;\n  }, serializedHeaders);\n}\n", "import { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n", "// Keeping the key broad until we add the new transports\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nexport function disabledUntil(limits: RateLimits, category: string): number {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, category: string, now: number = Date.now()): boolean {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  headers: Record<string, string | null | undefined>,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const parameters = limit.split(':', 2);\n      const headerDelay = parseInt(parameters[0], 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!parameters[1]) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of parameters[1].split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  }\n\n  return updatedRateLimits;\n}\n", "/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Severity,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalSingleton, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n\nimport { Session } from './session';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive } = {};\n\n  /** Extra */\n  protected _extra: Extras = {};\n\n  /** Contexts */\n  protected _contexts: Contexts = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata?: { [key: string]: unknown } = {};\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      this._session.update({ user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n  public setTransaction(name?: string): this {\n    return this.setTransactionName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n", "import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number;\n  public started: number;\n  public duration?: number = 0;\n  public status: SessionStatus = 'ok';\n  public environment?: string;\n  public ipAddress?: string;\n  public init: boolean = true;\n  public ignoreDuration: boolean = false;\n\n  public constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    // Both timestamp and started are in seconds since the UNIX epoch.\n    const startingTime = timestampInSeconds();\n    this.timestamp = startingTime;\n    this.started = startingTime;\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  public update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (!this.ipAddress && context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!this.did && !context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || timestampInSeconds();\n    if (context.ignoreDuration) {\n      this.ignoreDuration = context.ignoreDuration;\n    }\n    if (context.sid) {\n      // Good enough uuid validation. \u2014 Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (!this.did && context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (this.ignoreDuration) {\n      this.duration = undefined;\n    } else if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      const duration = this.timestamp - this.started;\n      this.duration = duration >= 0 ? duration : 0;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (!this.ipAddress && context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (!this.userAgent && context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  public close(status?: Exclude<SessionStatus, 'ok'>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === 'ok') {\n      this.update({ status: 'exited' });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  public toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration?: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: this.init,\n      // Make sure that sec is converted to ms for date constructor\n      started: new Date(this.started * 1000).toISOString(),\n      timestamp: new Date(this.timestamp * 1000).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: {\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      },\n    });\n  }\n}\n", "/*\n * This file defines flags and constants that can be modified during compile time in order to facilitate tree shaking\n * for users.\n *\n * Debug flags need to be declared in each package individually and must not be imported across package boundaries,\n * because some build tools have trouble tree-shaking imported guards.\n *\n * As a convention, we define debug flags in a `flags.ts` file in the root of a package's `src` folder.\n *\n * Debug flag files will contain \"magic strings\" like `__SENTRY_DEBUG__` that may get replaced with actual values during\n * our, or the user's build process. Take care when introducing new flags - they must not throw if they are not\n * replaced.\n */\n\ndeclare const __SENTRY_DEBUG__: boolean;\n\n/** Flag that is true for debug builds, false otherwise. */\nexport const IS_DEBUG_BUILD = typeof __SENTRY_DEBUG__ === 'undefined' ? true : __SENTRY_DEBUG__;\n", "/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalObject,\n  getGlobalSingleton,\n  isNodeEnv,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope?: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    hub?: Hub;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Hack to prevent bundlers from breaking our usage of the domain package in the cross-platform Hub package */\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      domain?: { [key: string]: any };\n    } & {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @hidden\n * @deprecated Can be removed once `Hub.getActiveDomain` is removed.\n */\nexport interface DomainAsCarrier extends Carrier {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  members: { [key: string]: any }[];\n}\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimic the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      IS_DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    const layer = this.getStackTop();\n    const scope = layer && layer.scope;\n    const session = scope && scope.getSession();\n    if (session) {\n      session.close();\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const global = getGlobalObject<{ navigator?: { userAgent?: string } }>();\n    const { userAgent } = global.navigator || {};\n\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        currentSession.update({ status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    IS_DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  IS_DEBUG_BUILD && logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n", "import {\n  AggregationCounts,\n  RequestSessionStatus,\n  SessionAggregates,\n  SessionFlusherLike,\n  Transport,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport { IS_DEBUG_BUILD } from './flags';\nimport { getCurrentHub } from './hub';\n\ntype ReleaseHealthAttributes = {\n  environment?: string;\n  release: string;\n};\n\n/**\n * @inheritdoc\n */\nexport class SessionFlusher implements SessionFlusherLike {\n  public readonly flushTimeout: number = 60;\n  private _pendingAggregates: Record<number, AggregationCounts> = {};\n  private _sessionAttrs: ReleaseHealthAttributes;\n  private _intervalId: ReturnType<typeof setInterval>;\n  private _isEnabled: boolean = true;\n  private _transport: Transport;\n\n  public constructor(transport: Transport, attrs: ReleaseHealthAttributes) {\n    this._transport = transport;\n    // Call to setInterval, so that flush is called every 60 seconds\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    this._sessionAttrs = attrs;\n  }\n\n  /** Sends session aggregates to Transport */\n  public sendSessionAggregates(sessionAggregates: SessionAggregates): void {\n    if (!this._transport.sendSession) {\n      IS_DEBUG_BUILD && logger.warn(\"Dropping session because custom transport doesn't implement sendSession\");\n      return;\n    }\n    void this._transport.sendSession(sessionAggregates).then(null, reason => {\n      IS_DEBUG_BUILD && logger.error('Error while sending session:', reason);\n    });\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSessions` */\n  public flush(): void {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this.sendSessionAggregates(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n  public getSessionAggregates(): SessionAggregates {\n    const aggregates: AggregationCounts[] = Object.keys(this._pendingAggregates).map((key: string) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates: SessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return dropUndefinedKeys(sessionAggregates);\n  }\n\n  /** JSDoc */\n  public close(): void {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n  public incrementSessionStatusCount(): void {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = getCurrentHub().getScope();\n    const requestSession = scope && scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      if (scope) {\n        scope.setRequestSession(undefined);\n      }\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n  private _incrementSessionStatusCount(status: RequestSessionStatus, date: Date): number {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts: AggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["Severity", "d", "b", "__assign", "global", "isNaN", "global", "global", "SentryError", "SeverityLevels", "global", "logger", "global", "global", "global", "_i", "isNaN", "SyncPromise", "SeverityLevels", "_a", "Scope", "Session", "IS_DEBUG_BUILD", "Hub", "exception", "IS_DEBUG_BUILD", "global", "SessionFlusher", "IS_DEBUG_BUILD"]
}
