{"remainingRequest":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/babel-loader/lib/index.js!/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/src/views/AddressEdit.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/src/views/AddressEdit.vue","mtime":1671008419639},{"path":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/babel.config.js","mtime":1671008419639},{"path":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJ2YW50L2VzL3RvYXN0L3N0eWxlIjsKaW1wb3J0IF9Ub2FzdCBmcm9tICJ2YW50L2VzL3RvYXN0IjsKaW1wb3J0IHsgcmVhY3RpdmUsIG9uTW91bnRlZCwgdG9SZWZzIH0gZnJvbSAndnVlJzsKaW1wb3J0IHNIZWFkZXIgZnJvbSAnQC9jb21wb25lbnRzL1NpbXBsZUhlYWRlcic7CmltcG9ydCB7IGFkZEFkZHJlc3MsIEVkaXRBZGRyZXNzLCBEZWxldGVBZGRyZXNzLCBnZXRBZGRyZXNzRGV0YWlsIH0gZnJvbSAnQC9zZXJ2aWNlL2FkZHJlc3MnOwppbXBvcnQgeyB0ZGlzdCB9IGZyb20gJ0AvY29tbW9uL2pzL3V0aWxzJzsKaW1wb3J0IHsgdXNlUm91dGUsIHVzZVJvdXRlciB9IGZyb20gJ3Z1ZS1yb3V0ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgc0hlYWRlcgogIH0sCiAgc2V0dXAoKSB7CiAgICBjb25zdCByb3V0ZSA9IHVzZVJvdXRlKCk7CiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTsKICAgIGNvbnN0IHN0YXRlID0gcmVhY3RpdmUoewogICAgICBhcmVhTGlzdDogewogICAgICAgIHByb3ZpbmNlX2xpc3Q6IHt9LAogICAgICAgIGNpdHlfbGlzdDoge30sCiAgICAgICAgY291bnR5X2xpc3Q6IHt9CiAgICAgIH0sCiAgICAgIHNlYXJjaFJlc3VsdDogW10sCiAgICAgIHR5cGU6ICdhZGQnLAogICAgICBhZGRyZXNzSWQ6ICcnLAogICAgICBhZGRyZXNzSW5mbzoge30sCiAgICAgIGZyb206IHJvdXRlLnF1ZXJ5LmZyb20KICAgIH0pOwogICAgb25Nb3VudGVkKGFzeW5jICgpID0+IHsKICAgICAgLy8g55yB5biC5Yy65YiX6KGo5p6E6YCgCiAgICAgIGxldCBfcHJvdmluY2VfbGlzdCA9IHt9OwogICAgICBsZXQgX2NpdHlfbGlzdCA9IHt9OwogICAgICBsZXQgX2NvdW50eV9saXN0ID0ge307CiAgICAgIHRkaXN0LmdldExldjEoKS5mb3JFYWNoKHAgPT4gewogICAgICAgIF9wcm92aW5jZV9saXN0W3AuaWRdID0gcC50ZXh0OwogICAgICAgIHRkaXN0LmdldExldjIocC5pZCkuZm9yRWFjaChjID0+IHsKICAgICAgICAgIF9jaXR5X2xpc3RbYy5pZF0gPSBjLnRleHQ7CiAgICAgICAgICB0ZGlzdC5nZXRMZXYzKGMuaWQpLmZvckVhY2gocSA9PiBfY291bnR5X2xpc3RbcS5pZF0gPSBxLnRleHQpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgc3RhdGUuYXJlYUxpc3QucHJvdmluY2VfbGlzdCA9IF9wcm92aW5jZV9saXN0OwogICAgICBzdGF0ZS5hcmVhTGlzdC5jaXR5X2xpc3QgPSBfY2l0eV9saXN0OwogICAgICBzdGF0ZS5hcmVhTGlzdC5jb3VudHlfbGlzdCA9IF9jb3VudHlfbGlzdDsKICAgICAgY29uc3QgewogICAgICAgIGFkZHJlc3NJZCwKICAgICAgICB0eXBlLAogICAgICAgIGZyb20KICAgICAgfSA9IHJvdXRlLnF1ZXJ5OwogICAgICBzdGF0ZS5hZGRyZXNzSWQgPSBhZGRyZXNzSWQ7CiAgICAgIHN0YXRlLnR5cGUgPSB0eXBlOwogICAgICBzdGF0ZS5mcm9tID0gZnJvbSB8fCAnJzsKICAgICAgaWYgKHR5cGUgPT0gJ2VkaXQnKSB7CiAgICAgICAgY29uc3QgewogICAgICAgICAgZGF0YTogYWRkcmVzc0RldGFpbAogICAgICAgIH0gPSBhd2FpdCBnZXRBZGRyZXNzRGV0YWlsKGFkZHJlc3NJZCk7CiAgICAgICAgbGV0IF9hcmVhQ29kZSA9ICcnOwogICAgICAgIGNvbnN0IHByb3ZpbmNlID0gdGRpc3QuZ2V0TGV2MSgpOwogICAgICAgIE9iamVjdC5lbnRyaWVzKHN0YXRlLmFyZWFMaXN0LmNvdW50eV9saXN0KS5mb3JFYWNoKChbaWQsIHRleHRdKSA9PiB7CiAgICAgICAgICAvLyDlhYjmib7lh7rlvZPliY3lr7nlupTnmoTljLoKICAgICAgICAgIGlmICh0ZXh0ID09IGFkZHJlc3NEZXRhaWwucmVnaW9uTmFtZSkgewogICAgICAgICAgICAvLyDmib7liLDljLrlr7nlupTnmoTlh6DkuKrnnIHku70KICAgICAgICAgICAgY29uc3QgcHJvdmluY2VJbmRleCA9IHByb3ZpbmNlLmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQuc3Vic3RyKDAsIDIpID09IGlkLnN1YnN0cigwLCAyKSk7CiAgICAgICAgICAgIC8vIOaJvuWIsOWMuuWvueW6lOeahOWHoOS4quW4guWMugogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKICAgICAgICAgICAgY29uc3QgY2l0eUl0ZW0gPSBPYmplY3QuZW50cmllcyhzdGF0ZS5hcmVhTGlzdC5jaXR5X2xpc3QpLmZpbHRlcigoW2NpdHlJZCwgY2l0eU5hbWVdKSA9PiBjaXR5SWQuc3Vic3RyKDAsIDQpID09IGlkLnN1YnN0cigwLCA0KSlbMF07CiAgICAgICAgICAgIC8vIOWvueavlOaJvuWIsOeahOecgeS7veWSjOaOpeWPo+i/lOWbnueahOecgeS7veaYr+WQpuebuOetie+8jOWboOS4uuacieS4gOS6m+WMuuS8mumHjeWQjQogICAgICAgICAgICBpZiAocHJvdmluY2VbcHJvdmluY2VJbmRleF0udGV4dCA9PSBhZGRyZXNzRGV0YWlsLnByb3ZpbmNlTmFtZSAmJiBjaXR5SXRlbVsxXSA9PSBhZGRyZXNzRGV0YWlsLmNpdHlOYW1lKSB7CiAgICAgICAgICAgICAgX2FyZWFDb2RlID0gaWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBzdGF0ZS5hZGRyZXNzSW5mbyA9IHsKICAgICAgICAgIGlkOiBhZGRyZXNzRGV0YWlsLmFkZHJlc3NJZCwKICAgICAgICAgIG5hbWU6IGFkZHJlc3NEZXRhaWwudXNlck5hbWUsCiAgICAgICAgICB0ZWw6IGFkZHJlc3NEZXRhaWwudXNlclBob25lLAogICAgICAgICAgcHJvdmluY2U6IGFkZHJlc3NEZXRhaWwucHJvdmluY2VOYW1lLAogICAgICAgICAgY2l0eTogYWRkcmVzc0RldGFpbC5jaXR5TmFtZSwKICAgICAgICAgIGNvdW50eTogYWRkcmVzc0RldGFpbC5yZWdpb25OYW1lLAogICAgICAgICAgYWRkcmVzc0RldGFpbDogYWRkcmVzc0RldGFpbC5kZXRhaWxBZGRyZXNzLAogICAgICAgICAgYXJlYUNvZGU6IF9hcmVhQ29kZSwKICAgICAgICAgIGlzRGVmYXVsdDogISFhZGRyZXNzRGV0YWlsLmRlZmF1bHRGbGFnCiAgICAgICAgfTsKICAgICAgfQogICAgfSk7CiAgICBjb25zdCBvblNhdmUgPSBhc3luYyBjb250ZW50ID0+IHsKICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgIHVzZXJOYW1lOiBjb250ZW50Lm5hbWUsCiAgICAgICAgdXNlclBob25lOiBjb250ZW50LnRlbCwKICAgICAgICBwcm92aW5jZU5hbWU6IGNvbnRlbnQucHJvdmluY2UsCiAgICAgICAgY2l0eU5hbWU6IGNvbnRlbnQuY2l0eSwKICAgICAgICByZWdpb25OYW1lOiBjb250ZW50LmNvdW50eSwKICAgICAgICBkZXRhaWxBZGRyZXNzOiBjb250ZW50LmFkZHJlc3NEZXRhaWwsCiAgICAgICAgZGVmYXVsdEZsYWc6IGNvbnRlbnQuaXNEZWZhdWx0ID8gMSA6IDAKICAgICAgfTsKICAgICAgaWYgKHN0YXRlLnR5cGUgPT0gJ2VkaXQnKSB7CiAgICAgICAgcGFyYW1zWydhZGRyZXNzSWQnXSA9IHN0YXRlLmFkZHJlc3NJZDsKICAgICAgfQogICAgICAoYXdhaXQgc3RhdGUudHlwZSkgPT0gJ2FkZCcgPyBhZGRBZGRyZXNzKHBhcmFtcykgOiBFZGl0QWRkcmVzcyhwYXJhbXMpOwogICAgICBfVG9hc3QoJ+S/neWtmOaIkOWKnycpOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICByb3V0ZXIuYmFjaygpOwogICAgICB9LCAxMDAwKTsKICAgIH07CiAgICBjb25zdCBvbkRlbGV0ZSA9IGFzeW5jICgpID0+IHsKICAgICAgYXdhaXQgRGVsZXRlQWRkcmVzcyhzdGF0ZS5hZGRyZXNzSWQpOwogICAgICBfVG9hc3QoJ+WIoOmZpOaIkOWKnycpOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICByb3V0ZXIuYmFjaygpOwogICAgICB9LCAxMDAwKTsKICAgIH07CiAgICByZXR1cm4gewogICAgICAuLi50b1JlZnMoc3RhdGUpLAogICAgICBvblNhdmUsCiAgICAgIG9uRGVsZXRlCiAgICB9OwogIH0KfTs="},{"version":3,"mappings":";;AAwBA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAK,QAAS,KAAI;AAEhD,OAAOC,OAAM,MAAO,2BAA0B;AAC9C,SAASC,UAAU,EAAEC,WAAW,EAAEC,aAAa,EAAEC,gBAAe,QAAS,mBAAkB;AAC3F,SAASC,KAAI,QAAS,mBAAkB;AACxC,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAW;AAC/C,eAAe;EACbC,UAAU,EAAE;IACVR;EACF,CAAC;EACDS,KAAK,GAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,EAAC;IACvB,MAAMK,MAAK,GAAIJ,SAAS,EAAC;IACzB,MAAMK,KAAI,GAAIf,QAAQ,CAAC;MACrBgB,QAAQ,EAAE;QACRC,aAAa,EAAE,CAAC,CAAC;QACjBC,SAAS,EAAE,CAAC,CAAC;QACbC,WAAW,EAAE,CAAC;MAChB,CAAC;MACDC,YAAY,EAAE,EAAE;MAChBC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,CAAC,CAAC;MACfC,IAAI,EAAEX,KAAK,CAACY,KAAK,CAACD;IACpB,CAAC;IAEDvB,SAAS,CAAC,YAAY;MACpB;MACA,IAAIyB,cAAa,GAAI,CAAC;MACtB,IAAIC,UAAS,GAAI,CAAC;MAClB,IAAIC,YAAW,GAAI,CAAC;MACpBpB,KAAK,CAACqB,OAAO,EAAE,CAACC,OAAO,CAACC,KAAK;QAC3BL,cAAc,CAACK,CAAC,CAACC,EAAE,IAAID,CAAC,CAACE,IAAG;QAC5BzB,KAAK,CAAC0B,OAAO,CAACH,CAAC,CAACC,EAAE,CAAC,CAACF,OAAO,CAACK,KAAK;UAC/BR,UAAU,CAACQ,CAAC,CAACH,EAAE,IAAIG,CAAC,CAACF,IAAG;UACxBzB,KAAK,CAAC4B,OAAO,CAACD,CAAC,CAACH,EAAE,CAAC,CAACF,OAAO,CAACO,KAAKT,YAAY,CAACS,CAAC,CAACL,EAAE,IAAIK,CAAC,CAACJ,IAAI;QAC9D,CAAC;MACH,CAAC;MACDlB,KAAK,CAACC,QAAQ,CAACC,aAAY,GAAIS,cAAa;MAC5CX,KAAK,CAACC,QAAQ,CAACE,SAAQ,GAAIS,UAAS;MACpCZ,KAAK,CAACC,QAAQ,CAACG,WAAU,GAAIS,YAAW;MAExC,MAAM;QAAEN,SAAS;QAAED,IAAI;QAAEG;MAAK,IAAIX,KAAK,CAACY,KAAI;MAC5CV,KAAK,CAACO,SAAQ,GAAIA,SAAQ;MAC1BP,KAAK,CAACM,IAAG,GAAIA,IAAG;MAChBN,KAAK,CAACS,IAAG,GAAIA,IAAG,IAAK,EAAC;MACtB,IAAIH,IAAG,IAAK,MAAM,EAAE;QAClB,MAAM;UAAEiB,IAAI,EAAEC;QAAc,IAAI,MAAMhC,gBAAgB,CAACe,SAAS;QAChE,IAAIkB,SAAQ,GAAI,EAAC;QACjB,MAAMC,QAAO,GAAIjC,KAAK,CAACqB,OAAO,EAAC;QAC/Ba,MAAM,CAACC,OAAO,CAAC5B,KAAK,CAACC,QAAQ,CAACG,WAAW,CAAC,CAACW,OAAO,CAAC,CAAC,CAACE,EAAE,EAAEC,IAAI,CAAC,KAAK;UACjE;UACA,IAAIA,IAAG,IAAKM,aAAa,CAACK,UAAU,EAAE;YACpC;YACA,MAAMC,aAAY,GAAIJ,QAAQ,CAACK,SAAS,CAACC,IAAG,IAAKA,IAAI,CAACf,EAAE,CAACgB,MAAM,CAAC,CAAC,EAAE,CAAC,KAAKhB,EAAE,CAACgB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACxF;YACA;YACA,MAAMC,QAAO,GAAIP,MAAM,CAACC,OAAO,CAAC5B,KAAK,CAACC,QAAQ,CAACE,SAAS,CAAC,CAACgC,MAAM,CAAC,CAAC,CAACC,MAAM,EAAEC,QAAQ,CAAC,KAAKD,MAAM,CAACH,MAAM,CAAC,CAAC,EAAE,CAAC,KAAKhB,EAAE,CAACgB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClI;YACA,IAAIP,QAAQ,CAACI,aAAa,CAAC,CAACZ,IAAG,IAAKM,aAAa,CAACc,YAAW,IAAKJ,QAAQ,CAAC,CAAC,KAAKV,aAAa,CAACa,QAAQ,EAAE;cACvGZ,SAAQ,GAAIR,EAAC;YACf;UACF;QACF,CAAC;QACDjB,KAAK,CAACQ,WAAU,GAAI;UAClBS,EAAE,EAAEO,aAAa,CAACjB,SAAS;UAC3BgC,IAAI,EAAEf,aAAa,CAACgB,QAAQ;UAC5BC,GAAG,EAAEjB,aAAa,CAACkB,SAAS;UAC5BhB,QAAQ,EAAEF,aAAa,CAACc,YAAY;UACpCK,IAAI,EAAEnB,aAAa,CAACa,QAAQ;UAC5BO,MAAM,EAAEpB,aAAa,CAACK,UAAU;UAChCL,aAAa,EAAEA,aAAa,CAACqB,aAAa;UAC1CC,QAAQ,EAAErB,SAAS;UACnBsB,SAAS,EAAE,CAAC,CAACvB,aAAa,CAACwB;QAC7B;MACF;IACF,CAAC;IAED,MAAMC,MAAK,GAAI,MAAOC,OAAO,IAAK;MAChC,MAAMC,MAAK,GAAI;QACbX,QAAQ,EAAEU,OAAO,CAACX,IAAI;QACtBG,SAAS,EAAEQ,OAAO,CAACT,GAAG;QACtBH,YAAY,EAAEY,OAAO,CAACxB,QAAQ;QAC9BW,QAAQ,EAAEa,OAAO,CAACP,IAAI;QACtBd,UAAU,EAAEqB,OAAO,CAACN,MAAM;QAC1BC,aAAa,EAAEK,OAAO,CAAC1B,aAAa;QACpCwB,WAAW,EAAEE,OAAO,CAACH,SAAQ,GAAI,IAAI;MACvC;MACA,IAAI/C,KAAK,CAACM,IAAG,IAAK,MAAM,EAAE;QACxB6C,MAAM,CAAC,WAAW,IAAInD,KAAK,CAACO,SAAQ;MACtC;MACA,OAAMP,KAAK,CAACM,IAAG,KAAK,KAAI,GAAIjB,UAAU,CAAC8D,MAAM,IAAI7D,WAAW,CAAC6D,MAAM;MACnE,OAAM,MAAM;MACZC,UAAU,CAAC,MAAM;QACfrD,MAAM,CAACsD,IAAI,EAAC;MACd,CAAC,EAAE,IAAI;IACT;IAEA,MAAMC,QAAO,GAAI,YAAY;MAC3B,MAAM/D,aAAa,CAACS,KAAK,CAACO,SAAS;MACnC,OAAM,MAAM;MACZ6C,UAAU,CAAC,MAAM;QACfrD,MAAM,CAACsD,IAAI,EAAC;MACd,CAAC,EAAE,IAAI;IACT;IAEA,OAAO;MACL,GAAGlE,MAAM,CAACa,KAAK,CAAC;MAChBiD,MAAM;MACNK;IACF;EACF;AACF","names":["reactive","onMounted","toRefs","sHeader","addAddress","EditAddress","DeleteAddress","getAddressDetail","tdist","useRoute","useRouter","components","setup","route","router","state","areaList","province_list","city_list","county_list","searchResult","type","addressId","addressInfo","from","query","_province_list","_city_list","_county_list","getLev1","forEach","p","id","text","getLev2","c","getLev3","q","data","addressDetail","_areaCode","province","Object","entries","regionName","provinceIndex","findIndex","item","substr","cityItem","filter","cityId","cityName","provinceName","name","userName","tel","userPhone","city","county","detailAddress","areaCode","isDefault","defaultFlag","onSave","content","params","setTimeout","back","onDelete"],"sourceRoot":"","sources":["/home/erfenjiao/mxbmall/newbee-mall-vue3-app-main/src/views/AddressEdit.vue"],"sourcesContent":["<!--\n\n *\n-->\n\n<template>\n  <div class=\"address-edit-box\">\n    <s-header :name=\"`${type == 'add' ? '新增地址' : '编辑地址'}`\"></s-header>\n    <van-address-edit\n      class=\"edit\"\n      :area-list=\"areaList\"\n      :address-info=\"addressInfo\"\n      :show-delete=\"type == 'edit'\"\n      show-set-default\n      show-search-result\n      :search-result=\"searchResult\"\n      :area-columns-placeholder=\"['请选择', '请选择', '请选择']\"\n      @save=\"onSave\"\n      @delete=\"onDelete\"\n    />\n  </div>\n</template>\n\n<script>\nimport { reactive, onMounted, toRefs } from 'vue'\nimport { Toast } from 'vant'\nimport sHeader from '@/components/SimpleHeader'\nimport { addAddress, EditAddress, DeleteAddress, getAddressDetail } from '@/service/address'\nimport { tdist } from '@/common/js/utils'\nimport { useRoute, useRouter } from 'vue-router'\nexport default {\n  components: {\n    sHeader\n  },\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const state = reactive({\n      areaList: {\n        province_list: {},\n        city_list: {},\n        county_list: {}\n      },\n      searchResult: [],\n      type: 'add',\n      addressId: '',\n      addressInfo: {},\n      from: route.query.from\n    })\n\n    onMounted(async () => {\n      // 省市区列表构造\n      let _province_list = {}\n      let _city_list = {}\n      let _county_list = {}\n      tdist.getLev1().forEach(p => {\n        _province_list[p.id] = p.text\n        tdist.getLev2(p.id).forEach(c => {\n          _city_list[c.id] = c.text\n          tdist.getLev3(c.id).forEach(q => _county_list[q.id] = q.text)\n        })\n      })\n      state.areaList.province_list = _province_list\n      state.areaList.city_list = _city_list\n      state.areaList.county_list = _county_list\n\n      const { addressId, type, from } = route.query\n      state.addressId = addressId\n      state.type = type\n      state.from = from || ''\n      if (type == 'edit') {\n        const { data: addressDetail } = await getAddressDetail(addressId)\n        let _areaCode = ''\n        const province = tdist.getLev1()\n        Object.entries(state.areaList.county_list).forEach(([id, text]) => {\n          // 先找出当前对应的区\n          if (text == addressDetail.regionName) {\n            // 找到区对应的几个省份\n            const provinceIndex = province.findIndex(item => item.id.substr(0, 2) == id.substr(0, 2))\n            // 找到区对应的几个市区\n            // eslint-disable-next-line no-unused-vars\n            const cityItem = Object.entries(state.areaList.city_list).filter(([cityId, cityName]) => cityId.substr(0, 4) == id.substr(0, 4))[0]\n            // 对比找到的省份和接口返回的省份是否相等，因为有一些区会重名\n            if (province[provinceIndex].text == addressDetail.provinceName && cityItem[1] == addressDetail.cityName) {\n              _areaCode = id\n            }\n          }\n        })\n        state.addressInfo = {\n          id: addressDetail.addressId,\n          name: addressDetail.userName,\n          tel: addressDetail.userPhone,\n          province: addressDetail.provinceName,\n          city: addressDetail.cityName,\n          county: addressDetail.regionName,\n          addressDetail: addressDetail.detailAddress,\n          areaCode: _areaCode,\n          isDefault: !!addressDetail.defaultFlag\n        }\n      }\n    })\n\n    const onSave = async (content) => {\n      const params = {\n        userName: content.name,\n        userPhone: content.tel,\n        provinceName: content.province,\n        cityName: content.city,\n        regionName: content.county,\n        detailAddress: content.addressDetail,\n        defaultFlag: content.isDefault ? 1 : 0,\n      }\n      if (state.type == 'edit') {\n        params['addressId'] = state.addressId\n      }\n      await state.type == 'add' ? addAddress(params) : EditAddress(params)\n      Toast('保存成功')\n      setTimeout(() => {\n        router.back()\n      }, 1000)\n    }\n\n    const onDelete = async () => {\n      await DeleteAddress(state.addressId)\n      Toast('删除成功')\n      setTimeout(() => {\n        router.back()\n      }, 1000)\n    }\n\n    return {\n      ...toRefs(state),\n      onSave,\n      onDelete\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n  @import '../common/style/mixin';\n  .edit {\n    .van-field__body {\n      textarea {\n        height: 26px!important;\n      }\n    }\n  }\n  .address-edit-box {\n    .van-address-edit {\n      .van-button--danger {\n        background: @primary;\n        border-color: @primary;\n      }\n      .van-switch--on {\n        background: @primary;\n      }\n    }\n  }\n</style>\n"]}]}