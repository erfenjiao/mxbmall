{"remainingRequest":"/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/babel-loader/lib/index.js!/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/erfenjiao/web/newbee-mall-vue3-app-main/src/components/VueImageVerify.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/erfenjiao/web/newbee-mall-vue3-app-main/src/components/VueImageVerify.vue","mtime":1663084725000},{"path":"/home/erfenjiao/web/newbee-mall-vue3-app-main/babel.config.js","mtime":1663084725000},{"path":"/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/erfenjiao/web/newbee-mall-vue3-app-main/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVhY3RpdmUsIG9uTW91bnRlZCwgcmVmLCB0b1JlZnMgfSBmcm9tICd2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgc2V0dXAoKSB7CiAgICBjb25zdCB2ZXJpZnkgPSByZWYobnVsbCk7CiAgICBjb25zdCBzdGF0ZSA9IHJlYWN0aXZlKHsKICAgICAgcG9vbDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMTIzNDU2Nzg5MCcsCiAgICAgIC8vIOWtl+espuS4sgogICAgICB3aWR0aDogMTIwLAogICAgICBoZWlnaHQ6IDQwLAogICAgICBpbWdDb2RlOiAnJwogICAgfSk7CiAgICBvbk1vdW50ZWQoKCkgPT4gewogICAgICAvLyDliJ3lp4vljJbnu5jliLblm77niYfpqozor4HnoIEKICAgICAgc3RhdGUuaW1nQ29kZSA9IGRyYXcoKTsKICAgIH0pOwoKICAgIC8vIOeCueWHu+WbvueJh+mHjeaWsOe7mOWItgogICAgY29uc3QgaGFuZGxlRHJhdyA9ICgpID0+IHsKICAgICAgc3RhdGUuaW1nQ29kZSA9IGRyYXcoKTsKICAgIH07CgogICAgLy8g6ZqP5py65pWwCiAgICBjb25zdCByYW5kb21OdW0gPSAobWluLCBtYXgpID0+IHsKICAgICAgcmV0dXJuIHBhcnNlSW50KE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbik7CiAgICB9OwogICAgLy8g6ZqP5py66aKc6ImyCiAgICBjb25zdCByYW5kb21Db2xvciA9IChtaW4sIG1heCkgPT4gewogICAgICBjb25zdCByID0gcmFuZG9tTnVtKG1pbiwgbWF4KTsKICAgICAgY29uc3QgZyA9IHJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIGNvbnN0IGIgPSByYW5kb21OdW0obWluLCBtYXgpOwogICAgICByZXR1cm4gYHJnYigke3J9LCR7Z30sJHtifSlgOwogICAgfTsKCiAgICAvLyDnu5jliLblm77niYcKICAgIGNvbnN0IGRyYXcgPSAoKSA9PiB7CiAgICAgIC8vIDMu5aGr5YWF6IOM5pmv6aKc6Imy77yM6IOM5pmv6aKc6Imy6KaB5rWF5LiA54K5CiAgICAgIGNvbnN0IGN0eCA9IHZlcmlmeS52YWx1ZS5nZXRDb250ZXh0KCcyZCcpOwogICAgICAvLyDloavlhYXpopzoibIKICAgICAgY3R4LmZpbGxTdHlsZSA9IHJhbmRvbUNvbG9yKDE4MCwgMjMwKTsKICAgICAgLy8g5aGr5YWF55qE5L2N572uCiAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCBzdGF0ZS53aWR0aCwgc3RhdGUuaGVpZ2h0KTsKICAgICAgLy8g5a6a5LmJcGFyYW1UZXh0CiAgICAgIGxldCBpbWdDb2RlID0gJyc7CiAgICAgIC8vIDQu6ZqP5py65Lqn55Sf5a2X56ym5Liy77yM5bm25LiU6ZqP5py65peL6L2sCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7CiAgICAgICAgLy8g6ZqP5py655qE5Zub5Liq5a2XCiAgICAgICAgY29uc3QgdGV4dCA9IHN0YXRlLnBvb2xbcmFuZG9tTnVtKDAsIHN0YXRlLnBvb2wubGVuZ3RoKV07CiAgICAgICAgaW1nQ29kZSArPSB0ZXh0OwogICAgICAgIC8vIOmaj+acuueahOWtl+S9k+Wkp+WwjwogICAgICAgIGNvbnN0IGZvbnRTaXplID0gcmFuZG9tTnVtKDE4LCA0MCk7CiAgICAgICAgLy8g5a2X5L2T6ZqP5py655qE5peL6L2s6KeS5bqmCiAgICAgICAgY29uc3QgZGVnID0gcmFuZG9tTnVtKC0zMCwgMzApOwogICAgICAgIC8qCiAgICAgICAgICog57uY5Yi25paH5a2X5bm26K6p5Zub5Liq5paH5a2X5Zyo5LiN5ZCM55qE5L2N572u5pi+56S655qE5oCd6LevIDoKICAgICAgICAgKiAx44CB5a6a5LmJ5a2X5L2TCiAgICAgICAgICogMuOAgeWumuS5ieWvuem9kOaWueW8jwogICAgICAgICAqIDPjgIHloavlhYXkuI3lkIznmoTpopzoibIKICAgICAgICAgKiA044CB5L+d5a2Y5b2T5YmN55qE54q25oCB77yI5Lul6Ziy5q2i5Lul5LiK55qE54q25oCB5Y+X5b2x5ZON77yJCiAgICAgICAgICogNeOAgeW5s+enu3RyYW5zbGF0ZSgpCiAgICAgICAgICogNuOAgeaXi+i9rCByb3RhdGUoKQogICAgICAgICAqIDfjgIHloavlhYXmloflrZcKICAgICAgICAgKiA444CBcmVzdG9yZeWHuuagiAogICAgICAgICAqICovCiAgICAgICAgY3R4LmZvbnQgPSBmb250U2l6ZSArICdweCBTaW1oZWknOwogICAgICAgIGN0eC50ZXh0QmFzZWxpbmUgPSAndG9wJzsKICAgICAgICBjdHguZmlsbFN0eWxlID0gcmFuZG9tQ29sb3IoODAsIDE1MCk7CiAgICAgICAgLyoKICAgICAgICAgKiBzYXZlKCkg5pa55rOV5oqK5b2T5YmN54q25oCB55qE5LiA5Lu95ou36LSd5Y6L5YWl5Yiw5LiA5Liq5L+d5a2Y5Zu+5YOP54q25oCB55qE5qCI5Lit44CCCiAgICAgICAgICog6L+Z5bCx5YWB6K645oKo5Li05pe25Zyw5pS55Y+Y5Zu+5YOP54q25oCB77yMCiAgICAgICAgICog54S25ZCO77yM6YCa6L+H6LCD55SoIHJlc3RvcmUoKSDmnaXmgaLlpI3ku6XliY3nmoTlgLzjgIIKICAgICAgICAgKiBzYXZl5piv5YWl5qCI77yMcmVzdG9yZeaYr+WHuuagiOOAggogICAgICAgICAqIOeUqOadpeS/neWtmENhbnZhc+eahOeKtuaAgeOAgnNhdmXkuYvlkI7vvIzlj6/ku6XosIPnlKhDYW52YXPnmoTlubPnp7vjgIHmlL7nvKnjgIHml4vovazjgIHplJnliIfjgIHoo4HliarnrYnmk43kvZzjgIIgcmVzdG9yZe+8mueUqOadpeaBouWkjUNhbnZhc+S5i+WJjeS/neWtmOeahOeKtuaAgeOAgumYsuatonNhdmXlkI7lr7lDYW52YXPmiafooYznmoTmk43kvZzlr7nlkI7nu63nmoTnu5jliLbmnInlvbHlk43jgIIKICAgICAgICAgKgogICAgICAgICAqICovCiAgICAgICAgY3R4LnNhdmUoKTsKICAgICAgICBjdHgudHJhbnNsYXRlKDMwICogaSArIDE1LCAxNSk7CiAgICAgICAgY3R4LnJvdGF0ZShkZWcgKiBNYXRoLlBJIC8gMTgwKTsKICAgICAgICAvLyBmaWxsVGV4dCgpIOaWueazleWcqOeUu+W4g+S4iue7mOWItuWhq+iJsueahOaWh+acrOOAguaWh+acrOeahOm7mOiupOminOiJsuaYr+m7keiJsuOAggogICAgICAgIC8vIOivt+S9v+eUqCBmb250IOWxnuaAp+adpeWumuS5ieWtl+S9k+WSjOWtl+WPt++8jOW5tuS9v+eUqCBmaWxsU3R5bGUg5bGe5oCn5Lul5Y+m5LiA56eN6aKc6ImyL+a4kOWPmOadpea4suafk+aWh+acrOOAggogICAgICAgIC8vIGNvbnRleHQuZmlsbFRleHQodGV4dCx4LHksbWF4V2lkdGgpOwogICAgICAgIGN0eC5maWxsVGV4dCh0ZXh0LCAtMTUgKyA1LCAtMTUpOwogICAgICAgIGN0eC5yZXN0b3JlKCk7CiAgICAgIH0KICAgICAgLy8gNS7pmo/mnLrkuqfnlJ815p2h5bmy5omw57q/LOW5suaJsOe6v+eahOminOiJsuimgea1heS4gOeCuQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykgewogICAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgICBjdHgubW92ZVRvKHJhbmRvbU51bSgwLCBzdGF0ZS53aWR0aCksIHJhbmRvbU51bSgwLCBzdGF0ZS5oZWlnaHQpKTsKICAgICAgICBjdHgubGluZVRvKHJhbmRvbU51bSgwLCBzdGF0ZS53aWR0aCksIHJhbmRvbU51bSgwLCBzdGF0ZS5oZWlnaHQpKTsKICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSByYW5kb21Db2xvcigxODAsIDIzMCk7CiAgICAgICAgY3R4LmNsb3NlUGF0aCgpOwogICAgICAgIGN0eC5zdHJva2UoKTsKICAgICAgfQogICAgICAvLyA2Lumaj+acuuS6p+eUnzQw5Liq5bmy5omw55qE5bCP54K5CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDA7IGkrKykgewogICAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgICBjdHguYXJjKHJhbmRvbU51bSgwLCBzdGF0ZS53aWR0aCksIHJhbmRvbU51bSgwLCBzdGF0ZS5oZWlnaHQpLCAxLCAwLCAyICogTWF0aC5QSSk7CiAgICAgICAgY3R4LmNsb3NlUGF0aCgpOwogICAgICAgIGN0eC5maWxsU3R5bGUgPSByYW5kb21Db2xvcigxNTAsIDIwMCk7CiAgICAgICAgY3R4LmZpbGwoKTsKICAgICAgfQogICAgICByZXR1cm4gaW1nQ29kZTsKICAgIH07CiAgICByZXR1cm4gewogICAgICAuLi50b1JlZnMoc3RhdGUpLAogICAgICB2ZXJpZnksCiAgICAgIGhhbmRsZURyYXcKICAgIH07CiAgfQp9Ow=="},{"version":3,"mappings":"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","names":["reactive","onMounted","ref","toRefs","setup","verify","state","pool","width","height","imgCode","draw","handleDraw","randomNum","min","max","parseInt","Math","random","randomColor","r","g","b","ctx","value","getContext","fillStyle","fillRect","i","text","length","fontSize","deg","font","textBaseline","save","translate","rotate","PI","fillText","restore","beginPath","moveTo","lineTo","strokeStyle","closePath","stroke","arc","fill"],"sourceRoot":"","sources":["/home/erfenjiao/web/newbee-mall-vue3-app-main/src/components/VueImageVerify.vue"],"sourcesContent":["<template>\n  <div class=\"img-verify\">\n    <canvas ref=\"verify\" :width=\"width\" :height=\"height\" @click=\"handleDraw\"></canvas>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nimport { reactive, onMounted, ref, toRefs } from 'vue'\nexport default {\n  setup() {\n    const verify = ref(null)\n    const state = reactive({\n      pool: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', // 字符串\n      width: 120,\n      height: 40,\n      imgCode: ''\n    })\n    onMounted(() => {\n      // 初始化绘制图片验证码\n      state.imgCode = draw()\n    })\n    \n    // 点击图片重新绘制\n    const handleDraw = () => {\n      state.imgCode = draw()\n    }\n\n    // 随机数\n    const randomNum = (min, max) => {\n      return parseInt(Math.random() * (max - min) + min)\n    }\n    // 随机颜色\n    const randomColor = (min, max) => {\n      const r = randomNum(min, max)\n      const g = randomNum(min, max)\n      const b = randomNum(min, max)\n      return `rgb(${r},${g},${b})`\n    }\n\n    // 绘制图片\n    const draw = () => {\n      // 3.填充背景颜色，背景颜色要浅一点\n      const ctx = verify.value.getContext('2d')\n      // 填充颜色\n      ctx.fillStyle = randomColor(180, 230)\n      // 填充的位置\n      ctx.fillRect(0, 0, state.width, state.height)\n      // 定义paramText\n      let imgCode = ''\n      // 4.随机产生字符串，并且随机旋转\n      for (let i = 0; i < 4; i++) {\n        // 随机的四个字\n        const text = state.pool[randomNum(0, state.pool.length)]\n        imgCode += text\n        // 随机的字体大小\n        const fontSize = randomNum(18, 40)\n        // 字体随机的旋转角度\n        const deg = randomNum(-30, 30)\n        /*\n         * 绘制文字并让四个文字在不同的位置显示的思路 :\n         * 1、定义字体\n         * 2、定义对齐方式\n         * 3、填充不同的颜色\n         * 4、保存当前的状态（以防止以上的状态受影响）\n         * 5、平移translate()\n         * 6、旋转 rotate()\n         * 7、填充文字\n         * 8、restore出栈\n         * */\n        ctx.font = fontSize + 'px Simhei'\n        ctx.textBaseline = 'top'\n        ctx.fillStyle = randomColor(80, 150)\n        /*\n         * save() 方法把当前状态的一份拷贝压入到一个保存图像状态的栈中。\n         * 这就允许您临时地改变图像状态，\n         * 然后，通过调用 restore() 来恢复以前的值。\n         * save是入栈，restore是出栈。\n         * 用来保存Canvas的状态。save之后，可以调用Canvas的平移、放缩、旋转、错切、裁剪等操作。 restore：用来恢复Canvas之前保存的状态。防止save后对Canvas执行的操作对后续的绘制有影响。\n         *\n         * */\n        ctx.save()\n        ctx.translate(30 * i + 15, 15)\n        ctx.rotate((deg * Math.PI) / 180)\n        // fillText() 方法在画布上绘制填色的文本。文本的默认颜色是黑色。\n        // 请使用 font 属性来定义字体和字号，并使用 fillStyle 属性以另一种颜色/渐变来渲染文本。\n        // context.fillText(text,x,y,maxWidth);\n        ctx.fillText(text, -15 + 5, -15)\n        ctx.restore()\n      }\n      // 5.随机产生5条干扰线,干扰线的颜色要浅一点\n      for (let i = 0; i < 5; i++) {\n        ctx.beginPath()\n        ctx.moveTo(randomNum(0, state.width), randomNum(0, state.height))\n        ctx.lineTo(randomNum(0, state.width), randomNum(0, state.height))\n        ctx.strokeStyle = randomColor(180, 230)\n        ctx.closePath()\n        ctx.stroke()\n      }\n      // 6.随机产生40个干扰的小点\n      for (let i = 0; i < 40; i++) {\n        ctx.beginPath()\n        ctx.arc(randomNum(0, state.width), randomNum(0, state.height), 1, 0, 2 * Math.PI)\n        ctx.closePath()\n        ctx.fillStyle = randomColor(150, 200)\n        ctx.fill()\n      }\n      return imgCode\n    }\n\n    return {\n      ...toRefs(state),\n      verify,\n      handleDraw\n    }\n  }\n}\n</script>\n<style type=\"text/css\">\n.img-verify canvas {\n  cursor: pointer;\n}\n</style>"]}]}